@using System.Text
@using MinStat.AnalizeUI.Models
@model StatisticDataModel
<script type="text/javascript" src="@Url.Content("~/Scripts//plugins/jqplot.barRenderer.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts//plugins/jqplot.categoryAxisRenderer.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts//plugins/jqplot.pointLabels.min.js")"></script>
<script type="text/javascript">
    $(document).ready(function () {

    @helper Vars(IEnumerable<string> values)
        {
            @Html.Raw(values.Aggregate((x, y) => String.Format("{0},{1}", x, y)))
    }
            @helper Series(IEnumerable<string> values)
                {
                    StringBuilder sb = new StringBuilder();
                    foreach (var value in values)
                    {
                        sb.Append(" { label: '" + value + "'  },");
                    }
            @Html.Raw(sb.ToString());
        }

   @foreach (StatisticDataItemModel dataItem in Model.Values)
   {
            @Html.Raw(String.Format("var points{0} = [];", dataItem.Id));
                                                                        foreach (string value in dataItem.Values)
                                                                        {
                @Html.Raw(String.Format("points{0}.push({1});", dataItem.Id, value.Replace(",", ".")));
                                                                        }

   }
        var plot3 = $.jqplot('chart3', [@Vars(Model.Values.Select(x => "points" + x.Id))], {
            // Tell the plot to stack the bars.    
            stackSeries: false,
            captureRightClick: false,
            series: [@Series(Model.Values.Select(x => x.Title))],
            seriesDefaults: {
                renderer: $.jqplot.BarRenderer,
                rendererOptions: {
                    barMargin: 10,
                    barWidth: 15,
                    highlightMouseDown: false
                },
                pointLabels: { show: true, location: 'n', edgeTolerance: -15 }
            },
            axes: {
                            xaxis: {
            renderer: $.jqplot.CategoryAxisRenderer,               
            ticks: [@Vars(Model.Titles.Skip(1).Select(x => string.Format("'{0}'", x.Value)))],
            min:0
            }
            },

           legend: {     renderer: $.jqplot.EnhancedLegendRenderer, placement: 'outsideGrid', location:'n',  show:true   }  
        });
        $('#chart3').bind('jqplotDataClick',
            function (ev, seriesIndex, pointIndex, data) {
                $('#info3').html('series: ' + seriesIndex + ', point: ' + pointIndex + ', data: ' + data);
            });
    });
</script>
<div id="chart3">
</div>


